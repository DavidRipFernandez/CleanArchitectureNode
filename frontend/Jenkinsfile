pipeline {
    agent any

    stages {
        stage('Prepare Directories') {
            steps {
                script {
                    def basePath = "C:\\nginx\\html\\grupo-01"
                    powershell """
                        if (-Not (Test-Path '${basePath}')) {
                            New-Item -Path '${basePath}' -ItemType Directory | Out-Null
                            New-Item -Path '${basePath}\\dev' -ItemType Directory | Out-Null
                            New-Item -Path '${basePath}\\test' -ItemType Directory | Out-Null
                            New-Item -Path '${basePath}\\staging' -ItemType Directory | Out-Null
                        }
                    """
                }
            }
        }

        stage('Stop nginx process') {
            steps {
                powershell('''
                    $svc = Get-Service -Name nginx -ErrorAction SilentlyContinue
                    if ($svc -and $svc.Status -eq "Running") {
                        net stop nginx
                    }
                ''')
            }
        }

        stage('Build & Deploy in Parallel') {
            parallel {
                stage('DEV (branch: develop)') {
                    steps {
                        dir('src-develop') {
                            // checkout de la rama develop en su propio directorio
                            git(url: 'https://github.com/DavidRipFernandez/CleanArchitectureNode', branch: 'develop')

                            dir('frontend') {
                                bat 'npm install'
                                bat 'npm run build:dev'
                            }

                            script {
                                def targetPath = "C:\\nginx\\html\\grupo-01\\dev\\"
                                powershell("Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                                powershell("Copy-Item -Path \"${WORKSPACE}\\src-develop\\frontend\\build-dev\\*\" -Destination \"${targetPath}\" -Recurse -Force")
                            }
                        }
                    }
                }

                stage('TEST (branch: test)') {
                    steps {
                        dir('src-test') {
                            // checkout de la rama test en su propio directorio
                            git(url: 'https://github.com/DavidRipFernandez/CleanArchitectureNode', branch: 'test')

                            dir('frontend') {
                                bat 'npm install'
                                bat 'npm run build:test'
                            }

                            script {
                                def targetPath = "C:\\nginx\\html\\grupo-01\\test\\"
                                powershell("Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                                powershell("Copy-Item -Path \"${WORKSPACE}\\src-test\\frontend\\build-test\\*\" -Destination \"${targetPath}\" -Recurse -Force")
                            }
                        }
                    }
                }

                stage('STAGING (branch: staging)') {
                    steps {
                        dir('src-staging') {
                            // checkout de la rama staging en su propio directorio
                            git(url: 'https://github.com/DavidRipFernandez/CleanArchitectureNode', branch: 'staging')

                            dir('frontend') {
                                bat 'npm install'
                                bat 'npm run build:staging'
                            }

                            script {
                                def targetPath = "C:\\nginx\\html\\grupo-01\\staging\\"
                                powershell("Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                                powershell("Copy-Item -Path \"${WORKSPACE}\\src-staging\\frontend\\build-staging\\*\" -Destination \"${targetPath}\" -Recurse -Force")
                            }
                        }
                    }
                }
            }
        }

        stage('Start nginx process') {
            steps {
                powershell('net start nginx')
            }
        }
    }
}
