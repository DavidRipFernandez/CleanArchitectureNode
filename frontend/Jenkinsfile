pipeline {
    agent any

    environment {
        NODE_HOME = "C:\\Program Files\\nodejs"
        PATH = "${env.NODE_HOME};${env.PATH}"
        NGINX_HTML = "C:/nginx/html/grupo-01"
        FRONTEND_DIR = "frontend"
    }

    stages {
        stage('Stop nginx process') {
            steps {
                powershell('net stop nginx')
                echo 'The nginx process has been stopped.'
            }
        }

        stage('Checkout Github Project') {
            steps {
                git url: 'https://github.com/DavidRipFernandez/CleanArchitectureNode', branch: 'main'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir("${env.FRONTEND_DIR}") {
                    bat 'npm install'
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir("${env.FRONTEND_DIR}") {
                    bat 'npm run build'
                }
            }
        }

        stage('Deploy in Parallel') {
            parallel {
                stage('DEV') {
                    steps {
                        script {
                            def envName = 'dev'
                            def targetPath = "${NGINX_HTML}\\${envName}\\"

                            powershell("Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                            powershell("New-Item -ItemType Directory -Force -Path \"${targetPath}\"")
                            powershell("Copy-Item -Path \"${WORKSPACE}\\${FRONTEND_DIR}\\build\\*\" -Destination \"${targetPath}\" -Recurse -Force")

                            powershell("""
                                \$indexPath = "${targetPath}index.html"
                                (Get-Content \$indexPath) -replace '<base href="/" />', '<base href="/grupo-01/${envName}/" />' | Set-Content \$indexPath
                            """)

                            echo "‚úÖ Deploy completed for DEV"
                        }
                    }
                }

                stage('TEST') {
                    steps {
                        script {
                            def envName = 'test'
                            def targetPath = "${NGINX_HTML}\\${envName}\\"

                            powershell("Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                            powershell("New-Item -ItemType Directory -Force -Path \"${targetPath}\"")
                            powershell("Copy-Item -Path \"${WORKSPACE}\\${FRONTEND_DIR}\\build\\*\" -Destination \"${targetPath}\" -Recurse -Force")

                            powershell("""
                                \$indexPath = "${targetPath}index.html"
                                (Get-Content \$indexPath) -replace '<base href="/" />', '<base href="/grupo-01/${envName}/" />' | Set-Content \$indexPath
                            """)

                            echo "‚úÖ Deploy completed for TEST"
                        }
                    }
                }

                stage('STAGING') {
                    steps {
                        script {
                            def envName = 'staging'
                            def targetPath = "${NGINX_HTML}\\${envName}\\"

                            powershell("Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                            powershell("New-Item -ItemType Directory -Force -Path \"${targetPath}\"")
                            powershell("Copy-Item -Path \"${WORKSPACE}\\${FRONTEND_DIR}\\build\\*\" -Destination \"${targetPath}\" -Recurse -Force")

                            powershell("""
                                \$indexPath = "${targetPath}index.html"
                                (Get-Content \$indexPath) -replace '<base href="/" />', '<base href="/grupo-01/${envName}/" />' | Set-Content \$indexPath
                            """)

                            echo "‚úÖ Deploy completed for STAGING"
                        }
                    }
                }
            }
        }

        stage('Start nginx process') {
            steps {
                powershell('net start nginx')
                echo 'The nginx process has been started.'
            }
        }
    }

    post {
        always {
            echo 'üöÄ Despliegue completado en DEV, TEST y STAGING dentro de grupo-01.'
        }
        failure {
            echo '‚ùå Despliegue fall√≥, revisa los logs.'
        }
    }
}
