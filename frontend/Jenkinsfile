pipeline {
    agent any

    stages {
        stage('Stop nginx process') {
            steps {
                powershell('net stop nginx')
            }
        }

        stage('Checkout Github Project') {
            steps {
                git(url: 'https://github.com/DavidRipFernandez/CleanArchitectureNode', branch: 'main')
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('frontend') {
                    bat 'npm install'
                }
            }
        }

        stage('Build & Deploy in Parallel') {
            parallel {
                stage('DEV') {
                    steps {
                        script {
                            // Crear directorio temporal para dev
                            def buildDir = "build-dev"
                            bat "mkdir ${buildDir} || echo \"Directory exists\""
                            
                            // Build específico para dev
                            dir('frontend') {
                                bat 'npm run build:dev'
                            }
                            
                            // Mover el build al directorio temporal
                            bat "move frontend\\build ${buildDir}\\ || echo \"Move completed\""
                            
                            // Desplegar
                            def targetPath = "C:\\nginx\\html\\grupo-01\\dev\\"
                            powershell("Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                            powershell("Copy-Item -Path \"${WORKSPACE}\\${buildDir}\\build\\*\" -Destination \"${targetPath}\" -Recurse -Force")
                        }
                    }
                }

                stage('TEST') {
                    steps {
                        script {
                            // Crear directorio temporal para test
                            def buildDir = "build-test"
                            bat "mkdir ${buildDir} || echo \"Directory exists\""
                            
                            // Build específico para test
                            dir('frontend') {
                                bat 'npm run build:test'
                            }
                            
                            // Mover el build al directorio temporal
                            bat "move frontend\\build ${buildDir}\\ || echo \"Move completed\""
                            
                            // Desplegar
                            def targetPath = "C:\\nginx\\html\\grupo-01\\test\\"
                            powershell("Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                            powershell("Copy-Item -Path \"${WORKSPACE}\\${buildDir}\\build\\*\" -Destination \"${targetPath}\" -Recurse -Force")
                        }
                    }
                }

                stage('STAGING') {
                    steps {
                        script {
                            // Crear directorio temporal para staging
                            def buildDir = "build-staging"
                            bat "mkdir ${buildDir} || echo \"Directory exists\""
                            
                            // Build específico para staging
                            dir('frontend') {
                                bat 'npm run build:staging'
                            }
                            
                            // Mover el build al directorio temporal
                            bat "move frontend\\build ${buildDir}\\ || echo \"Move completed\""
                            
                            // Desplegar
                            def targetPath = "C:\\nginx\\html\\grupo-01\\staging\\"
                            powershell("Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                            powershell("Copy-Item -Path \"${WORKSPACE}\\${buildDir}\\build\\*\" -Destination \"${targetPath}\" -Recurse -Force")
                        }
                    }
                }
            }
        }

        stage('Start nginx process') {
            steps {
                powershell('net start nginx')
            }
        }
        
        stage('Cleanup') {
            steps {
                // Limpiar solo los directorios temporales de build
                bat 'rmdir /S /Q build-dev 2>nul || echo "Already clean"'
                bat 'rmdir /S /Q build-test 2>nul || echo "Already clean"'
                bat 'rmdir /S /Q build-staging 2>nul || echo "Already clean"'
            }
        }
    }
}