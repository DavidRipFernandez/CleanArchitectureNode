pipeline {
    agent any

    stages {
        stage('Stop nginx process') {
            steps {
                powershell(returnStdout: true, script: 'net stop nginx')
                echo 'The nginx process has been stopped.'
            }
        }

        stage('Checkout Github Project') {
            steps {
                git(url: 'https://github.com/DavidRipFernandez/CleanArchitectureNode', branch: 'main')
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('frontend') {
                    bat 'npm install'
                }
            }
        }

        stage('Build & Deploy in Parallel') {
            parallel {
                stage('DEV') {
                    steps {
                        dir('frontend') {
                            powershell -Command "$env:REACT_APP_BASENAME='/grupo-01/dev'; npm run build"
                        }
                        script {
                            def targetPath = "C:\\nginx\\html\\grupo-01\\dev\\"
                            powershell(returnStdout: true, script: "Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                            powershell(returnStdout: true, script: "New-Item -ItemType Directory -Force -Path \"${targetPath}\"")
                            powershell(returnStdout: true, script: "Copy-Item -Path \"${WORKSPACE}\\frontend\\build\\*\" -Destination \"${targetPath}\" -Recurse -Force")
                            echo "‚úÖ Deploy to DEV done."
                        }
                    }
                }

                stage('TEST') {
                    steps {
                        dir('frontend') {
                            powershell -Command "$env:REACT_APP_BASENAME='/grupo-01/test'; npm run build"
                        }
                        script {
                            def targetPath = "C:\\nginx\\html\\grupo-01\\test\\"
                            powershell(returnStdout: true, script: "Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                            powershell(returnStdout: true, script: "New-Item -ItemType Directory -Force -Path \"${targetPath}\"")
                            powershell(returnStdout: true, script: "Copy-Item -Path \"${WORKSPACE}\\frontend\\build\\*\" -Destination \"${targetPath}\" -Recurse -Force")
                            echo "‚úÖ Deploy to TEST done."
                        }
                    }
                }

                stage('STAGING') {
                    steps {
                        dir('frontend') {
                            powershell -Command "$env:REACT_APP_BASENAME='/grupo-01/staging'; npm run build"
                        }
                        script {
                            def targetPath = "C:\\nginx\\html\\grupo-01\\staging\\"
                            powershell(returnStdout: true, script: "Remove-Item -Path \"${targetPath}*\" -Recurse -Force -ErrorAction SilentlyContinue")
                            powershell(returnStdout: true, script: "New-Item -ItemType Directory -Force -Path \"${targetPath}\"")
                            powershell(returnStdout: true, script: "Copy-Item -Path \"${WORKSPACE}\\frontend\\build\\*\" -Destination \"${targetPath}\" -Recurse -Force")
                            echo "‚úÖ Deploy to STAGING done."
                        }
                    }
                }
            }
        }

        stage('Start nginx process') {
            steps {
                powershell(returnStdout: true, script: 'net start nginx')
                echo 'The nginx process has been started.'
            }
        }
    }

    post {
        always {
            echo 'üöÄ Despliegue completado en DEV, TEST y STAGING dentro de grupo-01.'
        }
        failure {
            echo '‚ùå Despliegue fall√≥, revisa los logs.'
        }
    }
}
